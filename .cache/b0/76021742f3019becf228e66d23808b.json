{"id":"node_modules/html-table-stream/lib/parse.js","dependencies":[{"name":"C:\\Development\\Web\\open_layers_app\\package.json","includedInParent":true,"mtime":1657618246844},{"name":"C:\\Development\\Web\\open_layers_app\\node_modules\\html-table-stream\\package.json","includedInParent":true,"mtime":1657618199632},{"name":"htmlparser2","loc":{"line":1,"column":25,"index":25},"parent":"C:\\Development\\Web\\open_layers_app\\node_modules\\html-table-stream\\lib\\parse.js","resolved":"C:\\Development\\Web\\open_layers_app\\node_modules\\htmlparser2\\lib\\index.js"},{"name":"dom-lite","loc":{"line":2,"column":18,"index":59},"parent":"C:\\Development\\Web\\open_layers_app\\node_modules\\html-table-stream\\lib\\parse.js","resolved":"C:\\Development\\Web\\open_layers_app\\node_modules\\dom-lite\\index.js"},{"name":"./matcher","loc":{"line":4,"column":22,"index":123},"parent":"C:\\Development\\Web\\open_layers_app\\node_modules\\html-table-stream\\lib\\parse.js","resolved":"C:\\Development\\Web\\open_layers_app\\node_modules\\html-table-stream\\lib\\matcher.js"},{"name":"trim","loc":{"line":5,"column":19,"index":156},"parent":"C:\\Development\\Web\\open_layers_app\\node_modules\\html-table-stream\\lib\\parse.js","resolved":"C:\\Development\\Web\\open_layers_app\\node_modules\\trim\\index.js"},{"name":"extend","loc":{"line":6,"column":21,"index":186},"parent":"C:\\Development\\Web\\open_layers_app\\node_modules\\html-table-stream\\lib\\parse.js","resolved":"C:\\Development\\Web\\open_layers_app\\node_modules\\html-table-stream\\node_modules\\extend\\index.js"},{"name":"through2","loc":{"line":7,"column":23,"index":220},"parent":"C:\\Development\\Web\\open_layers_app\\node_modules\\html-table-stream\\lib\\parse.js","resolved":"C:\\Development\\Web\\open_layers_app\\node_modules\\html-table-stream\\node_modules\\through2\\through2.js"}],"generated":{"js":"var htmlparser = require('htmlparser2'),\n    dom = require('dom-lite'),\n    document = dom.document,\n    matcher = require('./matcher'),\n    trim = require('trim'),\n    extend = require('extend'),\n    through2 = require('through2');\n\nvar presets = {\n  'google-html': {\n    headerRow: matcher('tbody tr'),\n    headerCell: matcher('td'),\n    bodyRow: function(tr, i) {\n      // ugggghhhh, why do you make me do this, google?\n      return !tr.firstChild.className.match(/freezebar/);\n    },\n    bodyCell: matcher('td')\n  }\n};\n\nmodule.exports = function parse(options) {\n  var log = options.verbose ? console.warn.bind(console) : noop;\n\n  if (typeof options === 'string') {\n    // if options is a string, assume it's a preset name\n    options = presets[options] || {};\n  } else if (options.preset) {\n    // otherwise, merge in options from the named preset\n    var preset = presets[options.preset];\n    if (preset) {\n      Object.keys(preset).forEach(function(key) {\n        if (!options.hasOwnProperty(key)) {\n          options[key] = preset[key];\n        }\n      });\n    } else {\n      log('no such preset: \"%s\"', options.preset);\n    }\n  }\n\n  var columns = options.columns,\n      rows = [],\n      stack = [],\n      node,\n      table,\n      done = false,\n      matchesTable = matcher(options.table || 'table'),\n      matchesHeaderRow = matcher(options.headerRow || 'tr'),\n      matchesHeaderCell = matcher(options.headerCell || 'th, td'),\n      matchesContentRow = matcher(options.bodyRow || 'tr'),\n      matchesContentCell = matcher(options.bodyCell || 'th, td'),\n      parser = new htmlparser.Parser({\n        onopentag: onopentag,\n        ontext: ontext,\n        onclosetag: onclosetag\n      });\n\n  function onopentag(name, attrs) {\n    // log('<' + name + '>');\n    if (node) stack.push(node);\n    var parent = node;\n    node = createNode(name, attrs);\n    node.closed = false;\n    if (parent) {\n      parent.appendChild(node);\n    }\n    if (!table) {\n      var match = matchesTable(node);\n      if (match) {\n        table = node;\n      }\n    }\n  }\n\n  function createNode(name, attrs) {\n    var node = document.createElement(name);\n    if (attrs) {\n      for (var attr in attrs) {\n        node.setAttribute(attr, attrs[attr]);\n      }\n    }\n    return node;\n  }\n\n  function ontext(text) {\n    if (!node) return;\n    node.appendChild(document.createTextNode(text));\n  }\n\n  function onclosetag(name) {\n    // log('</' + name + '>');\n    node.closed = true;\n    if (table) {\n      processNode(node);\n      if (node === table) {\n        table = null;\n        done = true;\n        // log('<--- inactive', node.nodeName, node.attributes);\n      }\n    }\n    node = stack.pop();\n  }\n\n  function processNode(node) {\n    switch (node.nodeName.toLowerCase()) {\n      case 'br':\n        // append a line break to the node's text content, which will be\n        // collapsed into a space in clean()\n        node.appendChild(document.createTextNode('\\n'));\n        return;\n\n      // if we've read a <thead>, this is probably where we want to get the header rows\n      case 'thead':\n        if (!columns) {\n          var rows = node.querySelectorAll('tr').filter(matchesHeaderRow);\n          if (rows.length) {\n            log('processing %d row(s) in <thead>...', rows.length);\n            columns = readColumns(rows, matchesHeaderCell, log);\n            log('columns:', columns);\n          } else {\n            log('no matching rows in <thead>');\n          }\n        }\n        return;\n\n      case 'tr':\n        processRow(node);\n        return;\n\n      case 'th':\n      case 'td':\n        // XXX filter here?\n        return processCell(node);\n    }\n  }\n\n  function processRow(tr) {\n    if (!columns) {\n      // if we haven't read any columns yet, assume that we'll get them from\n      // the first row\n      if (matchesHeaderRow(tr, getNodeIndex(tr))) {\n        log('reading columns from:', tr.outerHTML);\n        columns = readColumns([tr], matchesHeaderCell, log);\n        log('columns:', columns);\n        // log('columns:', columns);\n      }\n    } else if (matchesContentRow(tr, getNodeIndex(tr))) {\n      var row = readColumnsFromRow(tr, columns, matchesContentCell, log);\n      log('read row:', row);\n      rows.push(row);\n    } else {\n      log('skipping row:', columns, tr.outerHTML);\n    }\n  }\n\n  function processCell(el) {\n    // XXX anything here?\n  }\n\n  return through2.obj(function(chunk, enc, next) {\n    parser.write(chunk);\n    while (rows.length) {\n      this.push(rows.shift());\n    }\n    next();\n    if (done) this.end();\n  });\n};\n\n// export presets\nmodule.exports.presets = presets;\n\nfunction readColumns(trs, cellFilter, log) {\n  var rows = [];\n  trs.forEach(function(tr, i) {\n    var row = rows[i] || (rows[i] = []),\n        x = i,\n        y = 0;\n    tr.querySelectorAll('th, td').filter(cellFilter || yes).forEach(function(cell, j) {\n      // log('read header:', cell.name, cell.textContent);\n      var rowspan = +cell.getAttribute('rowspan') || 1,\n          colspan = +cell.getAttribute('colspan') || 1,\n          rowRange = range(x, x + rowspan);\n\n      while (y < row.length) {\n        var c = row[y];\n        if (c) y++;\n        else break;\n      }\n\n      var colRange = range(y, y + colspan),\n          d = {\n            x: x,\n            y: y,\n            text: clean(cell.textContent),\n            rowspan: rowspan,\n            colspan: colspan\n          };\n      rowRange.forEach(function(x) {\n        var row = rows[x] || (rows[x] = []);\n        colRange.forEach(function(y, z) {\n          row[y] = z > 0\n            ? extend({}, d)\n            : d;\n        });\n      });\n      y += colspan;\n    });\n  });\n\n  var cols = rows[0];\n  for (var i = 1; i < rows.length; i++) {\n    var row = rows[i];\n    for (var j = 0; j < row.length; j++) {\n      if (!row[j]) continue;\n      else if (row[j] === cols[j]) continue;\n      else if (!cols[j]) cols[j] = row[j];\n      // log('combining:', cols[j], 'with', row[j]);\n      cols[j].text += ' ' + row[j].text;\n    }\n  }\n  // log('columns:', JSON.stringify(cols, null, '  '));\n  return cols.map(function(d) { return d.text; });\n}\n\nfunction readColumnsFromRow(tr, columns, cellFilter, log) {\n  var data = {};\n  // TODO: account for colspan and rowspan\n  tr.querySelectorAll('th, td').filter(cellFilter || yes).forEach(function(cell, i) {\n    var key = columns[i];\n    var text = clean(cell.textContent);\n    if (data.hasOwnProperty(key)) {\n      data[key] = [data[key], text];\n    } else {\n      data[key] = clean(cell.textContent);\n    }\n  });\n  return data;\n}\n\nfunction clean(text) {\n  return trim(text\n    .replace(/&nbsp;/g, ' ')\n    .replace(/&amp;/g, '&')\n    .replace(/\\s+/g, ' '));\n}\n\nfunction range(a, b, step) {\n  var range = [];\n  if (arguments.length < 3) step = 1;\n  for (a; a < b; a += step) range.push(a);\n  return range;\n}\n\nfunction getNodeIndex(node) {\n  var i = 0;\n  while (node = node.previousSibling) {\n    if (node.nodeType === 1) i++;\n  }\n  return i;\n}\n\nfunction yes() {\n  return true;\n}\n\nfunction no() {\n  return false;\n}\n\nfunction noop() {\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/html-table-stream/lib/parse.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}}],"sources":{"node_modules/html-table-stream/lib/parse.js":"var htmlparser = require('htmlparser2'),\n    dom = require('dom-lite'),\n    document = dom.document,\n    matcher = require('./matcher'),\n    trim = require('trim'),\n    extend = require('extend'),\n    through2 = require('through2');\n\nvar presets = {\n  'google-html': {\n    headerRow: matcher('tbody tr'),\n    headerCell: matcher('td'),\n    bodyRow: function(tr, i) {\n      // ugggghhhh, why do you make me do this, google?\n      return !tr.firstChild.className.match(/freezebar/);\n    },\n    bodyCell: matcher('td')\n  }\n};\n\nmodule.exports = function parse(options) {\n  var log = options.verbose ? console.warn.bind(console) : noop;\n\n  if (typeof options === 'string') {\n    // if options is a string, assume it's a preset name\n    options = presets[options] || {};\n  } else if (options.preset) {\n    // otherwise, merge in options from the named preset\n    var preset = presets[options.preset];\n    if (preset) {\n      Object.keys(preset).forEach(function(key) {\n        if (!options.hasOwnProperty(key)) {\n          options[key] = preset[key];\n        }\n      });\n    } else {\n      log('no such preset: \"%s\"', options.preset);\n    }\n  }\n\n  var columns = options.columns,\n      rows = [],\n      stack = [],\n      node,\n      table,\n      done = false,\n      matchesTable = matcher(options.table || 'table'),\n      matchesHeaderRow = matcher(options.headerRow || 'tr'),\n      matchesHeaderCell = matcher(options.headerCell || 'th, td'),\n      matchesContentRow = matcher(options.bodyRow || 'tr'),\n      matchesContentCell = matcher(options.bodyCell || 'th, td'),\n      parser = new htmlparser.Parser({\n        onopentag: onopentag,\n        ontext: ontext,\n        onclosetag: onclosetag\n      });\n\n  function onopentag(name, attrs) {\n    // log('<' + name + '>');\n    if (node) stack.push(node);\n    var parent = node;\n    node = createNode(name, attrs);\n    node.closed = false;\n    if (parent) {\n      parent.appendChild(node);\n    }\n    if (!table) {\n      var match = matchesTable(node);\n      if (match) {\n        table = node;\n      }\n    }\n  }\n\n  function createNode(name, attrs) {\n    var node = document.createElement(name);\n    if (attrs) {\n      for (var attr in attrs) {\n        node.setAttribute(attr, attrs[attr]);\n      }\n    }\n    return node;\n  }\n\n  function ontext(text) {\n    if (!node) return;\n    node.appendChild(document.createTextNode(text));\n  }\n\n  function onclosetag(name) {\n    // log('</' + name + '>');\n    node.closed = true;\n    if (table) {\n      processNode(node);\n      if (node === table) {\n        table = null;\n        done = true;\n        // log('<--- inactive', node.nodeName, node.attributes);\n      }\n    }\n    node = stack.pop();\n  }\n\n  function processNode(node) {\n    switch (node.nodeName.toLowerCase()) {\n      case 'br':\n        // append a line break to the node's text content, which will be\n        // collapsed into a space in clean()\n        node.appendChild(document.createTextNode('\\n'));\n        return;\n\n      // if we've read a <thead>, this is probably where we want to get the header rows\n      case 'thead':\n        if (!columns) {\n          var rows = node.querySelectorAll('tr').filter(matchesHeaderRow);\n          if (rows.length) {\n            log('processing %d row(s) in <thead>...', rows.length);\n            columns = readColumns(rows, matchesHeaderCell, log);\n            log('columns:', columns);\n          } else {\n            log('no matching rows in <thead>');\n          }\n        }\n        return;\n\n      case 'tr':\n        processRow(node);\n        return;\n\n      case 'th':\n      case 'td':\n        // XXX filter here?\n        return processCell(node);\n    }\n  }\n\n  function processRow(tr) {\n    if (!columns) {\n      // if we haven't read any columns yet, assume that we'll get them from\n      // the first row\n      if (matchesHeaderRow(tr, getNodeIndex(tr))) {\n        log('reading columns from:', tr.outerHTML);\n        columns = readColumns([tr], matchesHeaderCell, log);\n        log('columns:', columns);\n        // log('columns:', columns);\n      }\n    } else if (matchesContentRow(tr, getNodeIndex(tr))) {\n      var row = readColumnsFromRow(tr, columns, matchesContentCell, log);\n      log('read row:', row);\n      rows.push(row);\n    } else {\n      log('skipping row:', columns, tr.outerHTML);\n    }\n  }\n\n  function processCell(el) {\n    // XXX anything here?\n  }\n\n  return through2.obj(function(chunk, enc, next) {\n    parser.write(chunk);\n    while (rows.length) {\n      this.push(rows.shift());\n    }\n    next();\n    if (done) this.end();\n  });\n};\n\n// export presets\nmodule.exports.presets = presets;\n\nfunction readColumns(trs, cellFilter, log) {\n  var rows = [];\n  trs.forEach(function(tr, i) {\n    var row = rows[i] || (rows[i] = []),\n        x = i,\n        y = 0;\n    tr.querySelectorAll('th, td').filter(cellFilter || yes).forEach(function(cell, j) {\n      // log('read header:', cell.name, cell.textContent);\n      var rowspan = +cell.getAttribute('rowspan') || 1,\n          colspan = +cell.getAttribute('colspan') || 1,\n          rowRange = range(x, x + rowspan);\n\n      while (y < row.length) {\n        var c = row[y];\n        if (c) y++;\n        else break;\n      }\n\n      var colRange = range(y, y + colspan),\n          d = {\n            x: x,\n            y: y,\n            text: clean(cell.textContent),\n            rowspan: rowspan,\n            colspan: colspan\n          };\n      rowRange.forEach(function(x) {\n        var row = rows[x] || (rows[x] = []);\n        colRange.forEach(function(y, z) {\n          row[y] = z > 0\n            ? extend({}, d)\n            : d;\n        });\n      });\n      y += colspan;\n    });\n  });\n\n  var cols = rows[0];\n  for (var i = 1; i < rows.length; i++) {\n    var row = rows[i];\n    for (var j = 0; j < row.length; j++) {\n      if (!row[j]) continue;\n      else if (row[j] === cols[j]) continue;\n      else if (!cols[j]) cols[j] = row[j];\n      // log('combining:', cols[j], 'with', row[j]);\n      cols[j].text += ' ' + row[j].text;\n    }\n  }\n  // log('columns:', JSON.stringify(cols, null, '  '));\n  return cols.map(function(d) { return d.text; });\n}\n\nfunction readColumnsFromRow(tr, columns, cellFilter, log) {\n  var data = {};\n  // TODO: account for colspan and rowspan\n  tr.querySelectorAll('th, td').filter(cellFilter || yes).forEach(function(cell, i) {\n    var key = columns[i];\n    var text = clean(cell.textContent);\n    if (data.hasOwnProperty(key)) {\n      data[key] = [data[key], text];\n    } else {\n      data[key] = clean(cell.textContent);\n    }\n  });\n  return data;\n}\n\nfunction clean(text) {\n  return trim(text\n    .replace(/&nbsp;/g, ' ')\n    .replace(/&amp;/g, '&')\n    .replace(/\\s+/g, ' '));\n}\n\nfunction range(a, b, step) {\n  var range = [];\n  if (arguments.length < 3) step = 1;\n  for (a; a < b; a += step) range.push(a);\n  return range;\n}\n\nfunction getNodeIndex(node) {\n  var i = 0;\n  while (node = node.previousSibling) {\n    if (node.nodeType === 1) i++;\n  }\n  return i;\n}\n\nfunction yes() {\n  return true;\n}\n\nfunction no() {\n  return false;\n}\n\nfunction noop() {\n}\n"},"lineCount":273}},"error":null,"hash":"0f7a6a771f0106f59bc7a784408167a4","cacheData":{"env":{}}}