{"id":"node_modules/sequelize/lib/dialects/parserStore.js","dependencies":[{"name":"C:\\Development\\Web\\open_layers_app\\node_modules\\sequelize\\lib\\dialects\\parserStore.js.map","includedInParent":true,"mtime":1657618228724},{"name":"C:\\Development\\Web\\open_layers_app\\package.json","includedInParent":true,"mtime":1657618246844},{"name":"C:\\Development\\Web\\open_layers_app\\node_modules\\sequelize\\package.json","includedInParent":true,"mtime":1657618224754}],"generated":{"js":"\"use strict\";\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nvar stores = /* @__PURE__ */new Map();\n\nmodule.exports = function (dialect) {\n  if (!stores.has(dialect)) {\n    stores.set(dialect, /* @__PURE__ */new Map());\n  }\n\n  return {\n    clear: function clear() {\n      stores.get(dialect).clear();\n    },\n    refresh: function refresh(dataType) {\n      var _iterator = _createForOfIteratorHelper(dataType.types[dialect]),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var type = _step.value;\n          stores.get(dialect).set(type, dataType.parse);\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n    },\n    get: function get(type) {\n      return stores.get(dialect).get(type);\n    }\n  };\n};"},"sourceMaps":{"js":{"mappings":[{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":3,"column":0},"generated":{"line":9,"column":0}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":3,"column":6},"generated":{"line":9,"column":4}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":3,"column":6},"generated":{"line":9,"column":10}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":3,"column":15},"generated":{"line":9,"column":13}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":3,"column":15},"generated":{"line":9,"column":28}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":3,"column":19},"generated":{"line":9,"column":32}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":3,"column":15},"generated":{"line":9,"column":35}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":3,"column":0},"generated":{"line":9,"column":37}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":5,"column":0},"generated":{"line":11,"column":0}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":5,"column":0},"generated":{"line":11,"column":6}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":5,"column":7},"generated":{"line":11,"column":7}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":5,"column":0},"generated":{"line":11,"column":14}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":5,"column":17},"generated":{"line":11,"column":17}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":5,"column":17},"generated":{"line":11,"column":27}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":5,"column":17},"generated":{"line":11,"column":34}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":5,"column":28},"generated":{"line":11,"column":36}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":6,"column":2},"generated":{"line":12,"column":2}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":6,"column":6},"generated":{"line":12,"column":6}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":6,"column":7},"generated":{"line":12,"column":7}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":6,"column":7},"generated":{"line":12,"column":13}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":6,"column":14},"generated":{"line":12,"column":14}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":6,"column":7},"generated":{"line":12,"column":17}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":6,"column":18},"generated":{"line":12,"column":18}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":6,"column":7},"generated":{"line":12,"column":25}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":6,"column":2},"generated":{"line":12,"column":26}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":6,"column":28},"generated":{"line":12,"column":28}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":7,"column":4},"generated":{"line":13,"column":4}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":7,"column":4},"generated":{"line":13,"column":10}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":7,"column":11},"generated":{"line":13,"column":11}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":7,"column":4},"generated":{"line":13,"column":14}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":7,"column":15},"generated":{"line":13,"column":15}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":7,"column":4},"generated":{"line":13,"column":22}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":7,"column":24},"generated":{"line":13,"column":24}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":7,"column":24},"generated":{"line":13,"column":39}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":7,"column":28},"generated":{"line":13,"column":43}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":7,"column":24},"generated":{"line":13,"column":46}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":7,"column":4},"generated":{"line":13,"column":48}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":7,"column":28},"generated":{"line":14,"column":2}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":10,"column":2},"generated":{"line":16,"column":2}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":10,"column":9},"generated":{"line":16,"column":9}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":11,"column":4},"generated":{"line":17,"column":4}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":10,"column":9},"generated":{"line":17,"column":9}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":11,"column":12},"generated":{"line":17,"column":28}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":12,"column":6},"generated":{"line":18,"column":6}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":12,"column":6},"generated":{"line":18,"column":12}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":12,"column":13},"generated":{"line":18,"column":13}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":12,"column":6},"generated":{"line":18,"column":16}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":12,"column":17},"generated":{"line":18,"column":17}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":12,"column":6},"generated":{"line":18,"column":24}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":12,"column":26},"generated":{"line":18,"column":26}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":12,"column":6},"generated":{"line":18,"column":31}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":12,"column":26},"generated":{"line":19,"column":4}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":10,"column":9},"generated":{"line":19,"column":5}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":14,"column":4},"generated":{"line":20,"column":4}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":10,"column":9},"generated":{"line":20,"column":11}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":14,"column":12},"generated":{"line":20,"column":30}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":10,"column":9},"generated":{"line":20,"column":38}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":14,"column":22},"generated":{"line":20,"column":40}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":14,"column":22},"generated":{"line":21,"column":6}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":15,"column":25},"generated":{"line":21,"column":49}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":15,"column":25},"generated":{"line":21,"column":57}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":15,"column":34},"generated":{"line":21,"column":58}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":15,"column":25},"generated":{"line":21,"column":63}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":15,"column":40},"generated":{"line":21,"column":64}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":15,"column":25},"generated":{"line":21,"column":71}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":14,"column":22},"generated":{"line":21,"column":72}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":14,"column":22},"generated":{"line":22,"column":6}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":14,"column":22},"generated":{"line":24,"column":6}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":15,"column":6},"generated":{"line":25,"column":8}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":15,"column":50},"generated":{"line":25,"column":60}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":15,"column":50},"generated":{"line":26,"column":10}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":15,"column":17},"generated":{"line":26,"column":14}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":15,"column":50},"generated":{"line":26,"column":18}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":16,"column":8},"generated":{"line":27,"column":10}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":16,"column":8},"generated":{"line":27,"column":16}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":16,"column":15},"generated":{"line":27,"column":17}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":16,"column":8},"generated":{"line":27,"column":20}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":16,"column":19},"generated":{"line":27,"column":21}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":16,"column":8},"generated":{"line":27,"column":28}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":16,"column":28},"generated":{"line":27,"column":30}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":16,"column":8},"generated":{"line":27,"column":33}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":16,"column":32},"generated":{"line":27,"column":34}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":16,"column":8},"generated":{"line":27,"column":38}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":16,"column":38},"generated":{"line":27,"column":40}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":16,"column":38},"generated":{"line":27,"column":48}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":16,"column":47},"generated":{"line":27,"column":49}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":16,"column":8},"generated":{"line":27,"column":54}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":16,"column":47},"generated":{"line":28,"column":8}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":14,"column":22},"generated":{"line":29,"column":6}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":14,"column":22},"generated":{"line":30,"column":8}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":14,"column":22},"generated":{"line":31,"column":6}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":14,"column":22},"generated":{"line":32,"column":8}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":14,"column":22},"generated":{"line":33,"column":6}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":16,"column":47},"generated":{"line":34,"column":4}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":10,"column":9},"generated":{"line":34,"column":5}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":19,"column":4},"generated":{"line":35,"column":4}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":10,"column":9},"generated":{"line":35,"column":7}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":19,"column":8},"generated":{"line":35,"column":22}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":10,"column":9},"generated":{"line":35,"column":26}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":19,"column":14},"generated":{"line":35,"column":28}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":20,"column":6},"generated":{"line":36,"column":6}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":20,"column":13},"generated":{"line":36,"column":13}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":20,"column":13},"generated":{"line":36,"column":19}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":20,"column":20},"generated":{"line":36,"column":20}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":20,"column":13},"generated":{"line":36,"column":23}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":20,"column":24},"generated":{"line":36,"column":24}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":20,"column":13},"generated":{"line":36,"column":31}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":20,"column":33},"generated":{"line":36,"column":33}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":20,"column":13},"generated":{"line":36,"column":36}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":20,"column":37},"generated":{"line":36,"column":37}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":20,"column":13},"generated":{"line":36,"column":41}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":20,"column":6},"generated":{"line":36,"column":42}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":20,"column":37},"generated":{"line":37,"column":4}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":10,"column":9},"generated":{"line":38,"column":2}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":10,"column":2},"generated":{"line":38,"column":3}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":20,"column":37},"generated":{"line":39,"column":0}},{"source":"../../src/dialects/parserStore.js","name":null,"original":{"line":5,"column":0},"generated":{"line":39,"column":1}}],"sources":{"../../src/dialects/parserStore.js":"'use strict';\n\nconst stores = new Map();\n\nmodule.exports = dialect => {\n  if (!stores.has(dialect)) {\n    stores.set(dialect, new Map());\n  }\n\n  return {\n    clear() {\n      stores.get(dialect).clear();\n    },\n    refresh(dataType) {\n      for (const type of dataType.types[dialect]) {\n        stores.get(dialect).set(type, dataType.parse);\n      }\n    },\n    get(type) {\n      return stores.get(dialect).get(type);\n    }\n  };\n};\n"},"lineCount":null}},"error":null,"hash":"10de158f98bef11383ae181208c3d94b","cacheData":{"env":{}}}